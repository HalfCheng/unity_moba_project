---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2020/9/20 14:46
---
Logger.init("logger/gateway_server/", "gateway", true)

-- 连接数据库  auth_center
require("database/mysql_auth_center")

-- 初始化协议模块
local proto_type = {
    PROTO_JSON = 0,
    PROTO_BUF = 1,
}

ProtoMan.init(proto_type.PROTO_BUF)
if ProtoMan.proto_type() == proto_type.PROTO_BUF then
    local cmd_name_map = require("cmd_name_map")
    if cmd_name_map then
        ProtoMan.register_protobuf_cmd_map(cmd_name_map)
    end
end
--end

--开启网络服务
local game_config = require("game_config")
Netbus.tcp_listen(game_config.gateway_tcp_port);
print("Server TCP Start At " .. game_config.gateway_tcp_port)
Netbus.ws_listen(game_config.gateway_ws_port);
print("Server WS Start At " .. game_config.gateway_ws_port)
--Netbus.udp_listen(8002);
--end

local servers = game_config.servers
local gw_service = require("gateway/gw_service")
for k, v in pairs(servers) do
    local ret = Service.register_with_raw(v.stype, gw_service)
    if ret then
        print("register [" .. v.stype .. "] service success!")
    else
        Logger.error("register [" .. v.stype .. "] service failed!")
    end
end