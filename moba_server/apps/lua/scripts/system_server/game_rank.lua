---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2020/11/21 18:57
---

local Respones = require("Respones")
local Stype = require("Stype")
local Cmd = require("Cmd")
local redis_game = require("database/redis_game")
local redis_rank = require("database/redis_rank")
local redis_center = require("database/redis_center")

local function send_rank_info_to_client(s, uid, rank_user_info, rank_game_info)
    local rank_body = {}
    
    for i = 1, #rank_user_info do
        local info = {
            unick = rank_user_info[i].unick,
            uface = rank_user_info[i].uface,
            usex = rank_user_info[i].usex,

            uvip = rank_game_info[i].uvip,
            uchip = rank_game_info[i].uchip
        }
        table.insert(rank_body, info)
        Logger.error(info.unick, info.uface, info.usex, info.uvip, info.uchip)
    end

    local msg = { Stype.System, Cmd.eGetWorldRankUchipRes, uid, {
        status = Respones.OK,
        rank_info = rank_body
    } }
    Session.send_msg(s, msg)
end

local function get_rank_user_info(index, rank_uid, success_func, failed_func)
    -- return uinfo = { unick    uface    uvip    usex}
    redis_center.get_uinfo_inredis(rank_uid, function(err, uinfo)
        if err or uinfo == nil then
            if failed_func then
                failed_func()
            end
            return
        end
        success_func(index, uinfo)
    end)
end

local function get_rank_user_ugame_info(index, rank_uid, success_func, failed_func)
    -- return ugame_info = {uchp    uexp    uvip}
    redis_game.get_ugame_info_inredis(rank_uid, function(err, ugame_info)
        if err or ugame_info == nil then
            if failed_func then
                failed_func()
            end
            return
        end
        success_func(index, ugame_info)
    end)
end

local function get_rank_ugame_info(s, uid, rank_info, rank_user_info)
    local rank_ugame_info = {}
    local function failed_func()
        local msg = { Stype.System, Cmd.eGetWorldRankUchipRes, uid, {
            status = Respones.SystemErr,
        } }
        Session.send_msg(s, msg)
    end

    local function success_func(index, ugame_info)
        rank_ugame_info[index] = ugame_info
        if index == #rank_info then
            send_rank_info_to_client(s, uid, rank_user_info, rank_ugame_info)
        else
            index = index + 1
            get_rank_user_ugame_info(index, rank_info[index], success_func, failed_func)
        end
    end

    get_rank_user_ugame_info(1, rank_info[1], success_func, failed_func)
end

local function get_world_uchip_rank(s, req)
    local uid = req[3]

    --拉取排行榜前30的数据
    redis_rank.get_world_rank_with_uchip_inredis(30, function(err, rank_info)
        if err or rank_info == nil then
            local msg = { Stype.System, Cmd.eGetWorldRankUchipRes, uid, {
                status = Respones.SystemErr,
            } }
            Session.send_msg(s, msg)
            return
        end

        if #rank_info <= 0 then
            local msg = { Stype.System, Cmd.eGetWorldRankUchipRes, uid, {
                status = Respones.OK,
            } }
            Session.send_msg(s, msg)
            return
        end

        --获得我们排在前面的uid
        local rank_user_info = {}
        local function failed_func()
            local msg = { Stype.System, Cmd.eGetWorldRankUchipRes, uid, {
                status = Respones.SystemErr,
            } }
            Session.send_msg(s, msg)
        end

        local function success_func(index, user_info)
            rank_user_info[index] = user_info
            if index == #rank_info then
                get_rank_ugame_info(s, uid, rank_info, rank_user_info)
            else
                index = index + 1
                get_rank_user_info(index, rank_info[index], success_func, failed_func)
            end
        end

        get_rank_user_info(1, rank_info[1], success_func, failed_func)
    end)
end

local game_rank = {
    get_world_uchip_rank = get_world_uchip_rank
}

return game_rank