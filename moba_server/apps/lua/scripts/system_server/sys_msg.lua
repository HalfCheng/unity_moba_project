---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2020/11/22 18:44
---

local mysql_game = require("database/mysql_game")
local Respones = require("Respones")
local Stype = require("Stype")
local Cmd = require("Cmd")

local sys_msg_data = {} --如果你加载进来，就会保存到这个表里面
local sys_msg_version = 0 --什么时候加载的，时间戳，可以作为我们的版本号

local function load_sys_msg()
    mysql_game.get_sys_msg(function(err, ret)
        if err then
            Logger.error(err)
            Scheduler.once(load_sys_msg, 5000)
            return
        end

        sys_msg_version = Utils.timestamp()

        if ret == nil or #ret <= 0 then
            sys_msg_data = {}
            return
        end

        sys_msg_data = ret

        --过了晚上12点，再更新一下
        local tomorrow = Utils.timestamp_today() + 25 * 60 * 60
        Scheduler.once(load_sys_msg, (tomorrow - sys_msg_version) * 1000)
        --

        --for k, v in pairs(sys_msg_data) do
        --    print(v)
        --end
    end)
end

Scheduler.once(load_sys_msg, 5000)

local function get_sys_msg(s, req)
    local uid = req[3]
    local body = req[4]

    if (body.ver_num == sys_msg_version) then
        local msg = { Stype.System, Cmd.eGetSysMsgRes, uid, {
            status = Respones.OK,
            ver_num = sys_msg_version
        } }
        Session.send_msg(s, msg)
        return
    end

    local msg = { Stype.System, Cmd.eGetSysMsgRes, uid, {
        status = Respones.OK,
        ver_num = sys_msg_version,
        sys_msgs = sys_msg_data
    } }
    Session.send_msg(s, msg)

end

local sys_msg = {
    get_sys_msg = get_sys_msg,
}

return sys_msg