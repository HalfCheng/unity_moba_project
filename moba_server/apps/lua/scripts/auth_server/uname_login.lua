---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2020/11/8 23:35
---
local mysql_center = require("database/mysql_auth_center")

local Stype = require("Stype")
local Cmd = require("Cmd")
local Respones = require("Respones")
local redis_center = require("database/redis_center")

local function do_login(s, req)
    local uid = req[3]
    local uname_login_req = req[4]
    if string.len(uname_login_req.upwd_md5) ~= 32 or string.len(uname_login_req.uname) <= 0 then
        local msg = { Stype.Auth, Cmd.eUnameLoginReq, uid, {
            status = Respones.UnameOrPasswordErr,
        } }
        Logger.error("do_login22", uid)
        Session.send_msg(s, msg)
        return
    end
    --检查用户名和密码是否正确
    mysql_center.get_uinfo_by_uname_upwd(uname_login_req.uname, uname_login_req.upwd_md5, function(err, uinfo)
        --高数客户端某个错误信息
        if err then
            Logger.error("get_uinfo_by_uname_upwd")
            local msg = {
                Stype.Auth, Cmd.eUnameLoginRes, uid, {
                    status = Respones.SystemErr
                }
            }
            Session.send_msg(s, msg)
            return
        end

        if uinfo == nil then
            --没有查到对应的 用户不存在或密码错误
            Logger.error("Respones.UnameOrUpwdError", uname_login_req.uname, uname_login_req.upwd_md5)
            local msg = { Stype.Auth, Cmd.eUnameLoginRes, uid, { status = Respones.UnameOrUpwdError, } }
            Session.send_msg(s, msg)
            return
        end

        if uinfo.status ~= 0 then
            --账号被查封
            local msg = { Stype.Auth, Cmd.eUnameLoginRes, uid, { status = Respones.UserIsFreeze }
            }
            Session.send_msg(s, msg)
            return
        end

        --print(uinfo.uid, uinfo.unick) --登录成功返回给客户端
        redis_center.set_uinfo_inredis(uinfo.uid, uinfo)

        local msg = {
            Stype.Auth, Cmd.eUnameLoginRes, uid, {
                status = Respones.OK,
                uinfo = {
                    unick = uinfo.unick,
                    uface = uinfo.uface,
                    usex = uinfo.usex,
                    uvip = uinfo.uvip,
                    uid = uinfo.uid
                }
            }
        }
        Session.send_msg(s, msg)
    end)
    --end
end

local uname_login = {
    login = do_login
}

return uname_login