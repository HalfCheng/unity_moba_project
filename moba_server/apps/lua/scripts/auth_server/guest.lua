---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2020/9/26 22:47

local mysql_center = require("database/mysql_auth_center")
local redis_center = require("database/redis_center")
local Respones = require("Respones")
local Stype = require("Stype")
local Cmd = require("Cmd")

--{stype, ctype, utag, body}
local function login(s, rec_msg)
    print(rec_msg[4].guest_key)
    local g_key = rec_msg[4].guest_key
    local utag = rec_msg[3]
    
    --判断g_key的合法性，是否为string， 长度为32
    if type(g_key) ~= "string" or string.len(g_key) ~= 32 then
        local err_msg = {Stype.Auth, Cmd.eGuestLoginRes, utag, {
            status = Respones.InvalidParams
        }}
        Session.send_msg(s, err_msg)
        return
    end
    
    
    mysql_center.get_guest_uinfo(g_key, function(err, uinfo)
        --高数客户端某个错误信息
        if err then
            Logger.error(err)
            local msg = {
                Stype.Auth, Cmd.eGuestLoginRes, utag, {
                    status = Respones.SystemErr
                }
            }
            Session.send_msg(s, msg)
            return
        end

        if uinfo == nil then
            --没有查到对应的 g_key的信息
            mysql_center.insert_guest_user(g_key, function(err, ret)
                if err then
                    Logger.error(err)
                    local msg = {
                        Stype.Auth, Cmd.eGuestLoginRes, utag, {
                            status = Respones.SystemErr
                        }
                    }
                    Session.send_msg(s, msg)
                    return
                end
                login(s, rec_msg)
            end)
            return
        end
        --找到了我们的gkey所对应的游客数据
        if uinfo.status ~= 0 then
            --账号被查封
            local msg = {
                Stype.Auth, Cmd.eGuestLoginRes, utag, {
                    status = Respones.UserIsFreeze
                }
            }
            Session.send_msg(s, msg)
            return
        end
        --账号已经不是游客账号了
        if uinfo.is_guest ~= 1 then
            local msg = {
                Stype.Auth, Cmd.eGuestLoginRes, utag, {
                    status = Respones.UserIsNotGuest
                }
            }
            Session.send_msg(s, msg)
            return
        end
        --end
        --print(uinfo.uid, uinfo.unick) --登录成功返回给客户端
        
        redis_center.set_uinfo_inredis(uinfo.uid, uinfo)
        
        local msg = {
            Stype.Auth, Cmd.eGuestLoginRes, utag,{
                status = Respones.OK,
                uinfo = {
                    unick = uinfo.unick,
                    uface = uinfo.uface,
                    usex = uinfo.usex,
                    uvip = uinfo.uvip,
                    uid = uinfo.uid
                }
            }
        }
        Session.send_msg(s, msg)
    end)
end

local guest = {
    login = login
}

return guest